# This workflow will install Python dependencies, run tests and lint with a single version of Python
# Test 

name: Sync test

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Setup Database
      run: |
        sudo apt-get update && sudo apt-get upgrade -y
        sudo echo "America/Chicago" > /etc/timezone
        sudo dpkg-reconfigure -f noninteractive tzdata
        sudo ufw enable
        sudo ufw allow 22
        sudo ufw allow 3306
        sudo apt-get -y install zsh htop
        sudo echo "mysql-server-5.6 mysql-server/root_password password root" | sudo debconf-set-selections
        sudo echo "mysql-server-5.6 mysql-server/root_password_again password root" | sudo debconf-set-selections
        sudo apt-get -y install mysql-server-5.6
        sudo mysql_secure_installation
        sudo sed -i 's/127\.0\.0\.1/0\.0\.0\.0/g' /etc/mysql/my.cnf
        sudo mysql -uroot -p -e 'USE mysql; UPDATE `user` SET `Host`="%" WHERE `User`="root" AND `Host`="localhost"; DELETE FROM `user` WHERE `Host` != "%" AND `User`="root"; FLUSH PRIVILEGES;'
        sudo service mysql restart
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Log(s)
      run: |
        cat ./log/*